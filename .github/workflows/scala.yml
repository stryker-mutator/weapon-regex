name: Scala CI

on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Fetch all commits, used by sbt-dynver plugin to determine version
          fetch-depth: 0
        # Fetch all tags
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: 'sbt'
      - name: Compile code
        run: sbt "compile; docs3/mdoc --check"

  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: 'sbt'
      - name: Check formatting
        run: sbt scalafmtCheckAll

  test:
    name: Test (${{matrix.os}})
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'windows-latest']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: 'sbt'
      - name: Test
        run: sbt test

  test-js:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: 'sbt'
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: node/package-lock.json
      - name: Generate JS
        run: sbt fastLinkJS
      - name: Npm setup
        run: npm ci
        working-directory: node
      - name: Test
        run: npm test
        working-directory: node

  mutation-testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: 'sbt'
      - name: Run stryker
        run: sbt 'project WeaponRegeX; stryker'
        env:
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}

  release:
    needs: [build, formatting, test, test-js]
    if: "github.ref == 'refs/heads/main' || startsWith(github.event.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Fetch all commits, used by sbt-dynver plugin to determine version
          fetch-depth: 0
        # Fetch all tags
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: 'sbt'
      - run: git fetch --tags
      - name: Set NPM Env
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - name: Publish code
        run: sbt ci-release
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          CI_RELEASE: WeaponRegeXPublishSigned
